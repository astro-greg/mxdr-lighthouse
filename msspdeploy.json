{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "mspOfferName": {
            "type": "string",
            "metadata": {
                "description": "Specify a unique name for your offer"
            },
            "defaultValue": "Astro MXDR"
        },
        "mspOfferDescription": {
            "type": "string",
            "metadata": {
                "description": "Name of the Managed Service Provider offering"
            },
            "defaultValue": "Astro MXDR"
        },
        "managedByTenantId": {
            "type": "string",
            "metadata": {
                "description": "Specify the tenant id of the Managed Service Provider"
            },
            "defaultValue": "fc01bf40-5992-4808-868a-3fca863a2753"
        },
        "authorizations": {
            "type": "array",
            "metadata": {
                "description": "Specify an array of objects, containing tuples of Azure Active Directory principalId, a Azure roleDefinitionId, and an optional principalIdDisplayName. The roleDefinition specified is granted to the principalId in the provider's Active Directory and the principalIdDisplayName is visible to customers."
            },
            "defaultValue": [
           {
                    "principalId": "30044a1d-4833-4f7a-8911-85999ca08e59",
                    "roleDefinitionId": "b24988ac-6180-42a0-ab88-20f7382dd24c",
                    "principalIdDisplayName": "MXDR_SOC"
                },
                {
                  "principalId": "30044a1d-4833-4f7a-8911-85999ca08e59",
                  "roleDefinitionId": "ab8e14d6-4a74-4a29-9ba8-549422addade",
                  "principalIdDisplayName": "MXDR_SOC"
                },
                {
                  "principalId": "30044a1d-4833-4f7a-8911-85999ca08e59",
                  "roleDefinitionId": "fb1c8493-542b-48eb-b624-b4c8fea62acd",
                  "principalIdDisplayName": "MXDR_SOC"
                }
            ]
        },
        "rgName": {
            "type": "string"
        },
        "location": {
            "type": "string"
        },
        "workspaceName": {
            "type": "string",
            "metadata": {
                "description": "Name for the Log Analytics workspace"
            }
        },
        "pricingTier": {
            "type": "string",
            "metadata": {
                "description": "Pricing tier: pergb2018 or legacy tiers (Free, Standalone, PerNode, Standard or Premium) which are not available to all customers."
            },
            "allowedValues": [
                "PerGB2018",
                "Free",
                "Standalone",
                "PerNode",
                "Standard",
                "Premium"
            ],
            "defaultValue": "PerGB2018"
        },
        "dailyQuota": {
            "type": "int",
            "metadata": {
                "description": "Daily ingestion limit in GBs. This limit doesn't apply to the following tables: SecurityAlert, SecurityBaseline, SecurityBaselineSummary, SecurityDetection, SecurityEvent, WindowsFirewall, MaliciousIPCommunication, LinuxAuditLog, SysmonEvent, ProtectionStatus, WindowsEvent"
            }
        },
        "dataRetention": {
            "type": "int",
            "minValue": 7,
            "maxValue": 730,
            "metadata": {
                "description": "Number of days of retention. Workspaces in the legacy Free pricing tier can only have 7 days."
            },
            "defaultValue": 30
        },
        "immediatePurgeDataOn30Days": {
            "type": "bool",
            "metadata": {
                "description": "If set to true when changing retention to 30 days, older data will be immediately deleted. Use this with extreme caution. This only applies when retention is being set to 30 days."
            },
            "defaultValue": true
        },
        "securityCollectionTier": {
            "type": "string",
            "defaultValue": "Recommended",
            "allowedValues": [
                "All",
                "Recommended",
                "Minimal",
                "None"
            ],
            "metadata": {
                "description": "Tier for gathering Windows Security Events."
            }
        },
        "enableDataConnectorsKind": {
            "type": "array",
            "metadata": {
                "description": "The kind of data connectors that can be deployed via ARM templates are the following: [\"AzureActivityLog\",\"SecurityInsightsSecurityEventCollectionConfiguration\",\"WindowsFirewall\",\"DnsAnalytics\"], Reference: https://docs.microsoft.com/azure/templates/microsoft.operationalinsights/2020-03-01-preview/workspaces/datasources#microsoftoperationalinsightsworkspacesdatasources-object"
            },
            "defaultValue": []
        },
        "enableFusionAlert": {
            "type": "bool",
            "metadata": {
                "description": "Enable Fusion analytics rules"
            },
            "defaultValue": false
        },
        "enableMicrosoftAlerts": {
            "type": "bool",
            "metadata": {
                "description": "Enable Microsoft analytics rules"
            },
            "defaultValue": false
        },
        "enableMLAlerts": {
            "type": "bool",
            "metadata": {
                "description": "Enable ML Behavior Analytics rules"
            },
            "defaultValue": false
        },
        "enableScheduledAlerts": {
            "type": "bool",
            "metadata": {
                "description": "Enable Scheduled analytics rules"
            },
            "defaultValue": false
        },
        "mcasDiscoveryLogs": {
            "type": "bool",
            "metadata": {
                "description": "Enable MCAS Discovery Logs"
            },
            "defaultValue": false
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The location of resources"
            },
            "defaultValue": "https://github.com/astro-greg/mxdr-lighthouse"
        }
    },
    "variables": {
        "mspRegistrationName": "[guid(parameters('mspOfferName'))]",
        "mspAssignmentName": "[guid(parameters('mspOfferName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2020-06-01",
            "name": "[parameters('rgName')]",
            "location": "[parameters('location')]",
            "properties": {}
        },
        {
            "name": "workspaceCreation",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups',parameters('rgName'))]"
            ],
            "resourceGroup": "[parameters('rgName')]",
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "Inner"
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "workspaceName": {
                            "type": "string",
                            "metadata": {
                                "description": "Name for the Log Analytics workspace"
                            }
                        },
                        "pricingTier": {
                            "type": "string",
                            "metadata": {
                                "description": "Pricing tier: pergb2018 or legacy tiers (Free, Standalone, PerNode, Standard or Premium) which are not available to all customers."
                            },
                            "allowedValues": [
                                "PerGB2018",
                                "Free",
                                "Standalone",
                                "PerNode",
                                "Standard",
                                "Premium"
                            ],
                            "defaultValue": "PerGB2018"
                        },
                        "dailyQuota": {
                            "type": "int",
                            "metadata": {
                                "description": "Daily ingestion limit in GBs. This limit doesn't apply to the following tables: SecurityAlert, SecurityBaseline, SecurityBaselineSummary, SecurityDetection, SecurityEvent, WindowsFirewall, MaliciousIPCommunication, LinuxAuditLog, SysmonEvent, ProtectionStatus, WindowsEvent"
                            }
                        },
                        "dataRetention": {
                            "type": "int",
                            "minValue": 7,
                            "maxValue": 730,
                            "metadata": {
                                "description": "Number of days of retention. Workspaces in the legacy Free pricing tier can only have 7 days."
                            },
                            "defaultValue": 30
                        },
                        "immediatePurgeDataOn30Days": {
                            "type": "bool",
                            "metadata": {
                                "description": "If set to true when changing retention to 30 days, older data will be immediately deleted. Use this with extreme caution. This only applies when retention is being set to 30 days."
                            },
                            "defaultValue": true
                        },
                        "location": {
                            "type": "string",
                            "metadata": {
                                "description": "Location for all resources."
                            },
                            "defaultValue": "[resourceGroup().location]"
                        }
                    },
                    "functions": [],
                    "variables": {
                        "quoatSetting": {
                            "dailyQuotaGb": "[parameters('dailyQuota')]"
                        }
                    },
                    "resources": [
                        {
                            "name": "[parameters('workspaceName')]",
                            "type": "Microsoft.OperationalInsights/workspaces",
                            "apiVersion": "2015-11-01-preview",
                            "location": "[parameters('location')]",
                            "properties": {
                                "retentionInDays": "[parameters('dataRetention')]",
                                "workspaceCapping": "[if(equals(parameters('dailyQuota'),0), json('null'), variables('quoatSetting'))]",
                                "features": {
                                    "immediatePurgeDataOn30Days": "[parameters('immediatePurgeDataOn30Days')]"
                                },
                                "sku": {
                                    "name": "[parameters('pricingTier')]"
                                }
                            }
                        },
                                               {
                            "name": "[concat(parameters('workspaceName'),'/Microsoft.SecurityInsights/default')]",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/onboardingStates",
                            "apiVersion": "2021-03-01-preview",
                            "properties": {},
                            "dependsOn": [
                                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
                            ]
                        }
                    ],
                    "outputs": {}
                },

                "parameters": {
                    "workspaceName": {
                        "value": "[parameters('workspaceName')]"
                    },
                    "pricingTier": {
                        "value": "[parameters('pricingTier')]"
                    },
                    "dailyQuota": {
                        "value": "[parameters('dailyQuota')]"
                    },
                    "dataRetention": {
                        "value": "[parameters('dataRetention')]"
                    },
                    "immediatePurgeDataOn30Days": {
                        "value": "[parameters('immediatePurgeDataOn30Days')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        },
        {
            "condition": "[not(empty(parameters('enableDataConnectorsKind')))]",
            "name": "enableDataConnectorsKind",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "resourceGroup": "[parameters('rgName')]",
            "dependsOn": [
                "workspaceCreation",
                "[resourceId('Microsoft.Resources/resourceGroups',parameters('rgName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "Inner"
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "dataConnectorsKind": {
                            "type": "array",
                            "defaultValue": [],
                            "metadata": {
                                "description": "The kind of data connectors to enable"
                            }
                        },
                        "workspaceName": {
                            "type": "string",
                            "metadata": {
                                "description": "Name for the Log Analytics workspace used to aggregate data"
                            }
                        },
                        "securityCollectionTier": {
                            "type": "string",
                            "defaultValue": "Recommended",
                            "metadata": {
                                "description": "SecurityEvent logging level"
                            }
                        },
                        "tenantId": {
                            "type": "string",
                            "metadata": {
                                "description": "Azure AD tenant ID"
                            }
                        },
                        "subscriptionId": {
                            "type": "string",
                            "defaultValue": "[subscription().subscriptionId]",
                            "metadata": {
                                "description": "Sbscription Id to monitor"
                            }
                        },
                        "mcasDiscoveryLogs": {
                            "type": "bool"
                        },
                        "location": {
                            "type": "string",
                            "defaultValue": "[resourceGroup().location]",
                            "metadata": {
                                "description": "Location for all resources."
                            }
                        }
                    },
                    "variables": {
                        "o365Name": "[concat('o365', uniqueString(resourceGroup().id))]",
                        "mdatpName": "[concat('mdatp', uniqueString(resourceGroup().id))]",
                        "aatpName": "[concat('aatp', uniqueString(resourceGroup().id))]",
                        "ascName": "[concat('asc', uniqueString(resourceGroup().id))]",
                        "mcasName": "[concat('mcas', uniqueString(resourceGroup().id))]",
                        "aadipName": "[concat('aadip', uniqueString(resourceGroup().id))]",
                        "tiName": "[concat('ti', uniqueString(resourceGroup().id))]"
                    },
                    "resources": [
                        {
                            "condition": "[contains(parameters('dataConnectorsKind'), 'Office365')]",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
                            "apiVersion": "2020-01-01",
                            "location": "[parameters('location')]",
                            "name": "[concat(parameters('workspaceName'),'/Microsoft.SecurityInsights/',variables('o365Name'))]",
                            "kind": "Office365",
                            "properties": {
                                "tenantId": "[parameters('tenantId')]",
                                "dataTypes": {
                                    "exchange": {
                                        "state": "enabled"
                                    },
                                    "sharePoint": {
                                        "state": "enabled"
                                    },
                                    "teams": {
                                        "state": "enabled"
                                    }
                                }
                            }
                        },
                        {
                            "condition": "[contains(parameters('dataConnectorsKind'), 'MicrosoftDefenderAdvancedThreatProtection')]",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
                            "apiVersion": "2020-01-01",
                            "location": "[parameters('location')]",
                            "name": "[concat(parameters('workspaceName'),'/Microsoft.SecurityInsights/',variables('mdatpName'))]",
                            "kind": "MicrosoftDefenderAdvancedThreatProtection",
                            "properties": {
                                "tenantId": "[parameters('tenantId')]",
                                "dataTypes": {
                                    "alerts": {
                                        "state": "enabled"
                                    }
                                }
                            }
                        },
                        {
                            "condition": "[contains(parameters('dataConnectorsKind'), 'MicrosoftCloudAppSecurity')]",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
                            "apiVersion": "2020-01-01",
                            "location": "[parameters('location')]",
                            "name": "[concat(parameters('workspaceName'),'/Microsoft.SecurityInsights/',variables('mcasName'))]",
                            "kind": "MicrosoftCloudAppSecurity",
                            "properties": {
                                "tenantId": "[parameters('tenantId')]",
                                "dataTypes": {
                                    "alerts": {
                                        "state": "enabled"
                                    },
                                    "discoveryLogs": {
                                        "state": "[if(parameters('mcasDiscoveryLogs'),'enabled','disabled')]"
                                    }
                                }
                            }
                        },
                        {
                            "condition": "[contains(parameters('dataConnectorsKind'), 'AzureSecurityCenter')]",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
                            "apiVersion": "2020-01-01",
                            "location": "[parameters('location')]",
                            "name": "[concat(parameters('workspaceName'),'/Microsoft.SecurityInsights/',variables('ascName'))]",
                            "kind": "AzureSecurityCenter",
                            "properties": {
                                "subscriptionId": "[parameters('subscriptionId')]",
                                "dataTypes": {
                                    "alerts": {
                                        "state": "enabled"
                                    }
                                }
                            }
                        },
                        {
                            "condition": "[contains(parameters('dataConnectorsKind'), 'AzureAdvancedThreatProtection')]",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
                            "apiVersion": "2020-01-01",
                            "location": "[parameters('location')]",
                            "name": "[concat(parameters('workspaceName'),'/Microsoft.SecurityInsights/',variables('aatpName'))]",
                            "kind": "AzureAdvancedThreatProtection",
                            "properties": {
                                "tenantId": "[parameters('tenantId')]",
                                "dataTypes": {
                                    "alerts": {
                                        "state": "enabled"
                                    }
                                }
                            }
                        },
                        {
                            "condition": "[contains(parameters('dataConnectorsKind'), 'AzureActiveDirectory')]",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
                            "apiVersion": "2020-01-01",
                            "location": "[parameters('location')]",
                            "name": "[concat(parameters('workspaceName'),'/Microsoft.SecurityInsights/',variables('aadipName'))]",
                            "kind": "AzureActiveDirectory",
                            "properties": {
                                "tenantId": "[parameters('tenantId')]",
                                "dataTypes": {
                                    "alerts": {
                                        "state": "enabled"
                                    }
                                }
                            }
                        },
                        {
                            "condition": "[contains(parameters('dataConnectorsKind'), 'AzureActivity')]",
                            "type": "Microsoft.OperationalInsights/workspaces/dataSources",
                            "apiVersion": "2020-03-01-preview",
                            "location": "[parameters('location')]",
                            "name": "[concat(parameters('workspaceName'), '/', replace(parameters('subscriptionId'),'-', ''))]",
                            "kind": "AzureActivityLog",
                            "properties": {
                                "linkedResourceId": "[concat('/subscriptions/', parameters('subscriptionId'), '/providers/microsoft.insights/eventtypes/management')]"
                            }
                        },
                        {
                            "condition": "[contains(parameters('dataConnectorsKind'), 'SecurityEvents')]",
                            "type": "Microsoft.OperationalInsights/workspaces/dataSources",
                            "apiVersion": "2020-03-01-preview",
                            "location": "[parameters('location')]",
                            "name": "[concat(parameters('workspaceName'), '/SecurityInsightsSecurityEventCollectionConfiguration')]",
                            "kind": "SecurityInsightsSecurityEventCollectionConfiguration",
                            "properties": {
                                "tier": "[parameters('securityCollectionTier')]",
                                "tierSetMethod": "Custom"
                            }
                        },
                        {
                            "condition": "[contains(parameters('dataConnectorsKind'), 'WindowsFirewall')]",
                            "type": "Microsoft.OperationsManagement/solutions",
                            "apiVersion": "2015-11-01-preview",
                            "name": "[concat('WindowsFirewall','(', parameters('workspaceName'),')')]",
                            "location": "[parameters('location')]",
                            "plan": {
                                "name": "[concat('WindowsFirewall','(', parameters('workspaceName'),')')]",
                                "promotionCode": "",
                                "product": "OMSGallery/WindowsFirewall",
                                "publisher": "Microsoft"
                            },
                            "properties": {
                                "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces',parameters('workspaceName'))]",
                                "containedResources": []
                            }
                        },
                        {
                            "condition": "[contains(parameters('dataConnectorsKind'), 'DNS')]",
                            "type": "Microsoft.OperationsManagement/solutions",
                            "apiVersion": "2015-11-01-preview",
                            "name": "[concat('DnsAnalytics','(', parameters('workspaceName'),')')]",
                            "location": "[parameters('location')]",
                            "plan": {
                                "name": "[concat('DnsAnalytics','(', parameters('workspaceName'),')')]",
                                "promotionCode": "",
                                "product": "OMSGallery/DnsAnalytics",
                                "publisher": "Microsoft"
                            },
                            "properties": {
                                "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces',parameters('workspaceName'))]",
                                "containedResources": []
                            }
                        },
                        {
                            "condition": "[contains(parameters('dataConnectorsKind'), 'Syslog')]",
                            "type": "Microsoft.OperationalInsights/workspaces/dataSources",
                            "apiVersion": "2020-03-01-preview",
                            "location": "[parameters('location')]",
                            "name": "[concat(parameters('workspaceName'), '/syslogCollection')]",
                            "kind": "LinuxSyslogCollection",
                            "properties": {
                                "state": "Enabled"
                            }
                        },
                        {
                            "condition": "[contains(parameters('dataConnectorsKind'), 'ThreatIntelligence')]",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
                            "apiVersion": "2020-01-01",
                            "location": "[parameters('location')]",
                            "name": "[concat(parameters('workspaceName'),'/Microsoft.SecurityInsights/',variables('tiName'))]",
                            "kind": "ThreatIntelligence",
                            "properties": {
                                "tenantId": "[parameters('tenantId')]",
                                "dataTypes": {
                                    "indicators": {
                                        "state": "enabled"
                                    }
                                }
                            }
                        }
                    ]
                },
       
                "parameters": {
                    "dataConnectorsKind": {
                        "value": "[parameters('enableDataConnectorsKind')]"
                    },
                    "workspaceName": {
                        "value": "[parameters('workspaceName')]"
                    },
                    "tenantId": {
                        "value": "[subscription().tenantId]"
                    },
                    "subscriptionId": {
                        "value": "[subscription().subscriptionId]"
                    },
                    "securityCollectionTier": {
                        "value": "[parameters('securityCollectionTier')]"
                    },
                    "mcasDiscoveryLogs": {
                        "value": "[parameters('mcasDiscoveryLogs')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        },
        {
            "condition": "[or(parameters('enableFusionAlert'),parameters('enableMicrosoftAlerts'),parameters('enableMLAlerts'))]",
            "name": "enableAlerts",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "resourceGroup": "[parameters('rgName')]",
            "dependsOn": [
                "workspaceCreation",
                "[resourceId('Microsoft.Resources/resourceGroups',parameters('rgName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "Inner"
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "location": {
                            "type": "string",
                            "minLength": 1,
                            "defaultValue": "[resourceGroup().location]",
                            "metadata": {
                                "description": "Resource group to deploy solution resources"
                            }
                        },
                        "workspaceName": {
                            "defaultValue": "<Enter Log Analytics Workspace name>",
                            "type": "string",
                            "metadata": {
                                "description": "Workspace name for Log Analytics where Sentinel is setup"
                            }
                        },
                        "dataConnectorsKind": {
                            "type": "array",
                            "defaultValue": [],
                            "metadata": {
                                "description": "The kind of data connectors to enable"
                            }
                        },
                        "ruleGuid": {
                            "type": "string",
                            "defaultValue": "[newGuid()]",
                            "metadata": {
                                "description": "The unique guid for this scheduled alert rule"
                            }
                        },
                        "enableFusionAlert": {
                            "type": "bool",
                            "defaultValue": false
                        },
                        "enableMicrosoftAlerts": {
                            "type": "bool",
                            "defaultValue": false
                        },
                        "enableMLAlerts": {
                            "type": "bool",
                            "defaultValue": false
                        }
                    },
                    "functions": [],
                    "variables": {
                        "ascRuleId": "[concat('asc', uniqueString(parameters('ruleGuid')))]",
                        "mcasRuleId": "[concat('mcas', uniqueString(parameters('ruleGuid')))]",
                        "aatpRuleId": "[concat('aatp', uniqueString(parameters('ruleGuid')))]",
                        "mdatpRuleId": "[concat('mdatp', uniqueString(parameters('ruleGuid')))]",
                        "aadipRuleId": "[concat('aadip', uniqueString(parameters('ruleGuid')))]",
                        "o365RuleId": "[concat('o365', uniqueString(parameters('ruleGuid')))]",
                        "fusionRuleId": "[concat('fusion', uniqueString(parameters('ruleGuid')))]",
                        "mlbaSshRuleId": "[concat('mlSsh',uniqueString(parameters('ruleGuid')))]",
                        "mlbaRdpRuleId": "[concat('mlRdp',uniqueString(parameters('ruleGuid')))]"
                
                    },
                    "resources": [
                        {
                            "condition": "[and(contains(parameters('dataConnectorsKind'), 'AzureActiveDirectory'),parameters('enableMicrosoftAlerts'))]",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
                            "name": "[concat(parameters('workspaceName'),'/Microsoft.SecurityInsights/',variables('aadipRuleId'))]",
                            "apiVersion": "2020-01-01",
                            "kind": "MicrosoftSecurityIncidentCreation",
                            "location": "[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                                "alertRuleTemplateName": "532c1811-79ee-4d9f-8d4d-6304c840daa1",
                                "description": "Create incidents based on Azure Active Directory Identity Protection alerts",
                                "displayName": "Create incidents based on all alerts generated in Azure Active Directory Identity Protection",
                                "enabled": true,
                                "productFilter": "Azure Active Directory Identity Protection"
                            }
                        },
                        {
                            "condition": "[and(contains(parameters('dataConnectorsKind'), 'AzureSecurityCenter'),parameters('enableMicrosoftAlerts'))]",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
                            "name": "[concat(parameters('workspaceName'),'/Microsoft.SecurityInsights/',variables('ascRuleId'))]",
                            "apiVersion": "2020-01-01",
                            "kind": "MicrosoftSecurityIncidentCreation",
                            "location": "[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                                "alertRuleTemplateName": "90586451-7ba8-4c1e-9904-7d1b7c3cc4d6",
                                "description": "Create incidents based on Azure Security Center alerts",
                                "displayName": "Create incidents based on all alerts generated in Azure Security Center",
                                "enabled": true,
                                "productFilter": "Azure Security Center"
                            }
                        },
                        {
                            "condition": "[and(contains(parameters('dataConnectorsKind'), 'AzureAdvancedThreatProtection'),parameters('enableMicrosoftAlerts'))]",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
                            "name": "[concat(parameters('workspaceName'),'/Microsoft.SecurityInsights/',variables('aatpRuleId'))]",
                            "apiVersion": "2020-01-01",
                            "kind": "MicrosoftSecurityIncidentCreation",
                            "location": "[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                                "alertRuleTemplateName": "40ba9493-4183-4eee-974f-87fe39c8f267",
                                "description": "Create incidents based on Azure Advanced Threat Protection alerts",
                                "displayName": "Create incidents based on all alerts generated in Azure Advanced Threat Protection",
                                "enabled": true,
                                "productFilter": "Azure Advanced Threat Protection"
                            }
                        },
                        {
                            "condition": "[and(contains(parameters('dataConnectorsKind'), 'MicrosoftCloudAppSecurity'),parameters('enableMicrosoftAlerts'))]",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
                            "name": "[concat(parameters('workspaceName'),'/Microsoft.SecurityInsights/',variables('mcasRuleId'))]",
                            "apiVersion": "2020-01-01",
                            "kind": "MicrosoftSecurityIncidentCreation",
                            "location": "[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                                "alertRuleTemplateName": "b3cfc7c0-092c-481c-a55b-34a3979758cb",
                                "description": "Create incidents based on Microsoft Cloud App Security alerts",
                                "displayName": "Create incidents based on all alerts generated in Microsoft Cloud App Security",
                                "enabled": true,
                                "productFilter": "Microsoft Cloud App Security"
                            }
                        },
                        {
                            "condition": "[and(contains(parameters('dataConnectorsKind'), 'Office365'),parameters('enableMicrosoftAlerts'))]",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
                            "name": "[concat(parameters('workspaceName'),'/Microsoft.SecurityInsights/',variables('o365RuleId'))]",
                            "apiVersion": "2020-01-01",
                            "kind": "MicrosoftSecurityIncidentCreation",
                            "location": "[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                                "alertRuleTemplateName": "ee1d718b-9ed9-4a71-90cd-a483a4f008df",
                                "description": "Create incidents based on all alerts generated in Office 365 Advanced Threat Protection",
                                "displayName": "Create incidents based on Office 365 Advanced Threat Protection alerts",
                                "enabled": true,
                                "productFilter": "Office 365 Advanced Threat Protection"
                            }
                        },
                        {
                            "condition": "[and(contains(parameters('dataConnectorsKind'), 'MicrosoftDefenderAdvancedThreatProtection'),parameters('enableMicrosoftAlerts'))]",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
                            "name": "[concat(parameters('workspaceName'),'/Microsoft.SecurityInsights/',variables('mdatpRuleId'))]",
                            "apiVersion": "2020-01-01",
                            "kind": "MicrosoftSecurityIncidentCreation",
                            "location": "[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                                "alertRuleTemplateName": "327cd4ed-ca42-454b-887c-54e1c91363c6",
                                "description": "Create incidents based on Microsoft Defender Advanced Threat Protection alerts",
                                "displayName": "Create incidents based on all alerts generated in Microsoft Defender Advanced Threat Protection",
                                "enabled": true,
                                "productFilter": "Microsoft Defender Advanced Threat Protection"
                            }
                        },
                        {
                            "condition": "[and(contains(parameters('dataConnectorsKind'), 'Syslog'),parameters('enableMLAlerts'))]",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
                            "name": "[concat(parameters('workspaceName'),'/Microsoft.SecurityInsights/',variables('mlbaSshRuleId'))]",
                            "apiVersion": "2020-01-01",
                            "kind": "MLBehaviorAnalytics",
                            "location": "[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                                "enabled": true,
                                "alertRuleTemplateName": "fa118b98-de46-4e94-87f9-8e6d5060b60b"
                            }
                        },
                        {
                            "condition": "[and(contains(parameters('dataConnectorsKind'), 'SecurityEvents'),parameters('enableMLAlerts'))]",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
                            "name": "[concat(parameters('workspaceName'),'/Microsoft.SecurityInsights/',variables('mlbaRdpRuleId'))]",
                            "apiVersion": "2020-01-01",
                            "kind": "MLBehaviorAnalytics",
                            "location": "[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                                "enabled": true,
                                "alertRuleTemplateName": "737a2ce1-70a3-4968-9e90-3e6aca836abf"
                            }
                        },
                        {
                            "condition": "[parameters('enableFusionAlert')]",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
                            "name": "[concat(parameters('workspaceName'),'/Microsoft.SecurityInsights/',variables('fusionRuleId'))]",
                            "apiVersion": "2020-01-01",
                            "kind": "Fusion",
                            "location": "[parameters('location')]",
                            "dependsOn": [],
                            "properties": {
                                "enabled": true,
                                "alertRuleTemplateName": "f71aba3d-28fb-450b-b192-4e76a83015c8"
                            }
                        }
                    ],
                    "outputs": {
                        "ruleId": {
                            "type": "string",
                            "value": "[parameters('ruleGUID')]"
                        }
                    }
                },

                "parameters": {
                    "dataConnectorsKind": {
                        "value": "[parameters('enableDataConnectorsKind')]"
                    },
                    "workspaceName": {
                        "value": "[parameters('workspaceName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "enableFusionAlert":{
                        "value": "[parameters('enableFusionAlert')]"
                    },
                    "enableMicrosoftAlerts":{
                        "value": "[parameters('enableMicrosoftAlerts')]"
                    },
                    "enableMLAlerts":{
                        "value": "[parameters('enableMLAlerts')]"
                    }
                }
            }
        },
        {
            "condition": "[parameters('enableScheduledAlerts')]",
            "name": "enableScheduledAlerts",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "resourceGroup": "[parameters('rgName')]",
            "dependsOn": [
                "enableAlerts",
                "[resourceId('Microsoft.Resources/resourceGroups',parameters('rgName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "Inner"
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "workspaceName": {
                            "type": "string",
                            "metadata": {
                                "description": "Name for the Log Analytics workspace"
                            }
                        },
                        "dataConnectorsList": {
                            "type": "string",
                            "metadata": {
                                "description": "Comma separated enabled connectors: AzureActivityLog,SecurityEvents,WindowsFirewall,DnsAnalytics. Reference: https://docs.microsoft.com/azure/templates/microsoft.operationalinsights/2020-03-01-preview/workspaces/datasources#microsoftoperationalinsightsworkspacesdatasources-object"
                            }
                        },
                        "roleGuid": {
                            "type": "string",
                            "defaultValue": "[newGuid()]"
                        }
                    },
                    "functions": [],
                    "variables": {
                        "identityName": "[concat('userIdentity',uniqueString(resourceGroup().id))]"
                    },
                    "resources": [
                        {
                            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
                            "name": "[variables('identityName')]",
                            "apiVersion": "2018-11-30",
                            "location": "[resourceGroup().location]"
                        },
                        {
                            "dependsOn": ["[concat('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('identityName'))]"],
                            "type": "Microsoft.Resources/deploymentScripts",
                            "apiVersion": "2020-10-01",
                            "name": "sleep",
                            "location": "[resourceGroup().location]",
                            "kind": "AzurePowerShell",
                            "properties": {
                                "forceUpdateTag": "1",
                                "azPowerShellVersion": "3.0",
                                "arguments": "",
                                "scriptContent": "Start-Sleep -Seconds 120",
                                "supportingScriptUris": [],
                                "timeout": "PT30M",
                                "cleanupPreference": "Always",
                                "retentionInterval": "P1D"
                            }
                        },
                        {
                            "apiVersion": "2017-09-01",
                            "type": "Microsoft.Authorization/roleAssignments",
                            "name": "[parameters('roleGuid')]",
                            "properties": {
                                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName')), '2018-11-30', 'Full').properties.principalId]",
                                "scope": "[resourceGroup().id]"
                            },
                            "dependsOn": [
                                "[concat('Microsoft.Resources/deploymentScripts/', 'sleep')]"
                            ]
                        },
                        {
                            "dependsOn": ["[concat('Microsoft.Authorization/roleAssignments/', parameters('roleGuid'))]"],
                            "type": "Microsoft.Resources/deploymentScripts",
                            "apiVersion": "2020-10-01",
                            "name": "runPowerShellInline",
                            "location": "[resourceGroup().location]",
                            "kind": "AzurePowerShell",
                            "identity": {
                                "type": "userAssigned",
                                "userAssignedIdentities": {
                                    "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/',variables('identityName'))]": {}
                                }
                            },
                            "properties": {
                                "forceUpdateTag": "1",
                                "azPowerShellVersion": "3.0",
                                "arguments": "[concat('-Workspace ', parameters('workspaceName'), ' -ResourceGroup ', resourceGroup().name, ' -Connectors ', parameters('dataConnectorsList'))]",
                                "primaryScriptUri": "https://raw.githubusercontent.com/astro-greg/mxdr-lighthouse/refs/heads/main/EnableRules.ps1",
                                "supportingScriptUris": [],
                                "timeout": "PT30M",
                                "cleanupPreference": "OnSuccess",
                                "retentionInterval": "P1D"
                            }
                        }
                    ],
                    "outputs": {}
                },

                "parameters": {
                    "workspaceName": {
                        "value": "[parameters('workspaceName')]"
                    },
                    "dataConnectorsList":{
                        "value": "[replace(replace(string(parameters('enableDataConnectorsKind')),'\"',''),'[','')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.ManagedServices/registrationDefinitions",
            "apiVersion": "2019-06-01",
            "name": "[variables('mspRegistrationName')]",
            "properties": {
                "registrationDefinitionName": "[parameters('mspOfferName')]",
                "description": "[parameters('mspOfferDescription')]",
                "managedByTenantId": "[parameters('managedByTenantId')]",
                "authorizations": "[parameters('authorizations')]"
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "name": "rgAssignment",
            "resourceGroup": "[parameters('rgName')]",
            "dependsOn": [
                "[resourceId('Microsoft.ManagedServices/registrationDefinitions/', variables('mspRegistrationName'))]",
                "[resourceId('Microsoft.Resources/resourceGroups',parameters('rgName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "resources": [
                        {
                            "type": "Microsoft.ManagedServices/registrationAssignments",
                            "apiVersion": "2019-06-01",
                            "name": "[variables('mspAssignmentName')]",
                            "properties": {
                                "registrationDefinitionId": "[resourceId('Microsoft.ManagedServices/registrationDefinitions/', variables('mspRegistrationName'))]"
                            }
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {
        "mspOfferName": {
            "type": "string",
            "value": "[concat('Managed by', ' ', parameters('mspOfferName'))]"
        },
        "authorizations": {
            "type": "array",
            "value": "[parameters('authorizations')]"
        },
        "workspaceName": {
            "type": "string",
            "value": "[parameters('workspaceName')]"
        },
        "dataConnectorsList": {
            "type": "string",
            "value": "[replace(replace(string(parameters('enableDataConnectorsKind')),'\"',''),'[','')]"
        }
    }
}
